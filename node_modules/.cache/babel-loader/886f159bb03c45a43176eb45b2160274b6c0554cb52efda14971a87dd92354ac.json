{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\n\n// Fetches the list of questions\nexport const fetchQuestions = async () => {\n  const response = await fetch(`${API_BASE_URL}/questions`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch questions: ${response.statusText}`);\n  }\n  return response.json();\n};\n\n// Submits answers and calculates the bitmask\nexport const submitAnswers = async (formSubmissionId, answers) => {\n  const response = await fetch(`${API_BASE_URL}/answers`, {\n    // Corrected the endpoint\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      formSubmissionId,\n      answers\n    })\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to submit answers: ${response.statusText}`);\n  }\n  return response.json();\n};\n\n// Fetches diagnosis results for a given formSubmissionId\nexport const fetchDiagnosisResults = async formSubmissionId => {\n  const response = await fetch(`${API_BASE_URL}/diagnosis-results?formSubmissionId=${formSubmissionId}`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch diagnosis results: ${response.statusText}`);\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchQuestions","response","fetch","ok","Error","statusText","json","submitAnswers","formSubmissionId","answers","method","headers","body","JSON","stringify","fetchDiagnosisResults"],"sources":["/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\n\n// Fetches the list of questions\nexport const fetchQuestions = async () => {\n  const response = await fetch(`${API_BASE_URL}/questions`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch questions: ${response.statusText}`);\n  }\n  return response.json();\n};\n\n// Submits answers and calculates the bitmask\nexport const submitAnswers = async (formSubmissionId, answers) => {\n  const response = await fetch(`${API_BASE_URL}/answers`, { // Corrected the endpoint\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ formSubmissionId, answers }),\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to submit answers: ${response.statusText}`);\n  }\n  return response.json();\n};\n\n// Fetches diagnosis results for a given formSubmissionId\nexport const fetchDiagnosisResults = async (formSubmissionId) => {\n  const response = await fetch(`${API_BASE_URL}/diagnosis-results?formSubmissionId=${formSubmissionId}`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch diagnosis results: ${response.statusText}`);\n  }\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,YAAY,CAAC;EACzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8BH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACtE;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,gBAAgB,EAAEC,OAAO,KAAK;EAChE,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,UAAU,EAAE;IAAE;IACxDW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,gBAAgB;MAAEC;IAAQ,CAAC;EACpD,CAAC,CAAC;EACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6BH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACrE;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMS,qBAAqB,GAAG,MAAOP,gBAAgB,IAAK;EAC/D,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,uCAAuCS,gBAAgB,EAAE,CAAC;EACtG,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsCH,QAAQ,CAACI,UAAU,EAAE,CAAC;EAC9E;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}