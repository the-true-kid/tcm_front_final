{"ast":null,"code":"var _jsxFileName = \"/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/DiagnosisResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchDiagnosisResults } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiagnosisResults() {\n  _s();\n  const {\n    submissionId\n  } = useParams(); // Use submissionId dynamically from the route\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    if (!submissionId || isNaN(Number(submissionId))) {\n      console.error('Invalid or missing submissionId:', submissionId);\n      setError('Invalid submission ID. Please try again.');\n      setLoading(false);\n      return;\n    }\n    async function loadResults() {\n      try {\n        console.log(`Fetching diagnosis results for submissionId: ${submissionId}`);\n        const data = await fetchDiagnosisResults(Number(submissionId));\n        console.log('Fetched diagnosis results:', data);\n        if (data.length === 0) {\n          setError('No diagnosis results found for the specified submission.');\n        } else {\n          setResults(data);\n        }\n      } catch (err) {\n        console.error('Error fetching diagnosis results:', err);\n        setError('Failed to load diagnosis results. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadResults();\n  }, [submissionId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading diagnosis results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagnosis-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Diagnosis Results for Submission ID: \", submissionId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.organ_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \": \", result.diagnosis_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: result.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`/treatment-plan/${submissionId}`),\n      children: \"View Treatment Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(DiagnosisResults, \"DDcjnwnGucAHBbdQDIy4a89Eg78=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DiagnosisResults;\nexport default DiagnosisResults;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisResults\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","fetchDiagnosisResults","jsxDEV","_jsxDEV","DiagnosisResults","_s","submissionId","results","setResults","loading","setLoading","error","setError","navigate","isNaN","Number","console","loadResults","log","data","length","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","result","organ_name","diagnosis_name","description","id","onClick","_c","$RefreshReg$"],"sources":["/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/DiagnosisResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchDiagnosisResults } from '../utils/api';\n\nfunction DiagnosisResults() {\n  const { submissionId } = useParams(); // Use submissionId dynamically from the route\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    if (!submissionId || isNaN(Number(submissionId))) {\n      console.error('Invalid or missing submissionId:', submissionId);\n      setError('Invalid submission ID. Please try again.');\n      setLoading(false);\n      return;\n    }\n\n    async function loadResults() {\n      try {\n        console.log(`Fetching diagnosis results for submissionId: ${submissionId}`);\n        const data = await fetchDiagnosisResults(Number(submissionId));\n        console.log('Fetched diagnosis results:', data);\n\n        if (data.length === 0) {\n          setError('No diagnosis results found for the specified submission.');\n        } else {\n          setResults(data);\n        }\n      } catch (err) {\n        console.error('Error fetching diagnosis results:', err);\n        setError('Failed to load diagnosis results. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadResults();\n  }, [submissionId]);\n\n  if (loading) {\n    return <p>Loading diagnosis results...</p>;\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  return (\n    <div className=\"diagnosis-results\">\n      <h2>Diagnosis Results for Submission ID: {submissionId}</h2>\n      <ul>\n        {results.map((result) => (\n          <li key={result.id}>\n            <strong>{result.organ_name}</strong>: {result.diagnosis_name} <br />\n            <em>{result.description}</em>\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => navigate(`/treatment-plan/${submissionId}`)}>\n        View Treatment Plan\n      </button>\n    </div>\n  );\n}\n\nexport default DiagnosisResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,qBAAqB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCH,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,YAAY,IAAIQ,KAAK,CAACC,MAAM,CAACT,YAAY,CAAC,CAAC,EAAE;MAChDU,OAAO,CAACL,KAAK,CAAC,kCAAkC,EAAEL,YAAY,CAAC;MAC/DM,QAAQ,CAAC,0CAA0C,CAAC;MACpDF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,eAAeO,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACFD,OAAO,CAACE,GAAG,CAAC,gDAAgDZ,YAAY,EAAE,CAAC;QAC3E,MAAMa,IAAI,GAAG,MAAMlB,qBAAqB,CAACc,MAAM,CAACT,YAAY,CAAC,CAAC;QAC9DU,OAAO,CAACE,GAAG,CAAC,4BAA4B,EAAEC,IAAI,CAAC;QAE/C,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;UACrBR,QAAQ,CAAC,0DAA0D,CAAC;QACtE,CAAC,MAAM;UACLJ,UAAU,CAACW,IAAI,CAAC;QAClB;MACF,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZL,OAAO,CAACL,KAAK,CAAC,mCAAmC,EAAEU,GAAG,CAAC;QACvDT,QAAQ,CAAC,qDAAqD,CAAC;MACjE,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElB,IAAIG,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAmB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5C;EAEA,IAAIf,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAGwB,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACjD;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAL,QAAA,gBAChCnB,OAAA;MAAAmB,QAAA,GAAI,uCAAqC,EAAChB,YAAY;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5DvB,OAAA;MAAAmB,QAAA,EACGf,OAAO,CAACqB,GAAG,CAAEC,MAAM,iBAClB1B,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAASO,MAAM,CAACC;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACG,MAAM,CAACE,cAAc,EAAC,GAAC,eAAA5B,OAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpEvB,OAAA;UAAAmB,QAAA,EAAKO,MAAM,CAACG;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAFtBG,MAAM,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,mBAAmBP,YAAY,EAAE,CAAE;MAAAgB,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CA7DQD,gBAAgB;EAAA,QACEL,SAAS,EAIjBC,WAAW;AAAA;AAAAmC,EAAA,GALrB/B,gBAAgB;AA+DzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}