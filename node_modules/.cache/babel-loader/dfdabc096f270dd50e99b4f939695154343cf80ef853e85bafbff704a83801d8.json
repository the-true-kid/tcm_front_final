{"ast":null,"code":"var _jsxFileName = \"/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/DiagnosisResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchDiagnosisResults } from '../utils/api';\nimport NavBar from './NavBar';\nimport { Button, Container, Typography, CircularProgress, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DiagnosisResults() {\n  _s();\n  const {\n    submissionId\n  } = useParams(); // Use submissionId dynamically from the route\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    if (!submissionId || isNaN(Number(submissionId))) {\n      console.error('Invalid or missing submissionId:', submissionId);\n      setError('Invalid submission ID. Please try again.');\n      setLoading(false);\n      return;\n    }\n    async function loadResults() {\n      try {\n        console.log(`Fetching diagnosis results for submissionId: ${submissionId}`);\n        const data = await fetchDiagnosisResults(Number(submissionId));\n        console.log('Fetched diagnosis results:', data);\n        if (data.length === 0) {\n          setError('No diagnosis results found for the specified submission.');\n        } else {\n          setResults(data);\n        }\n      } catch (err) {\n        console.error('Error fetching diagnosis results:', err);\n        setError('Failed to load diagnosis results. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadResults();\n  }, [submissionId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        textAlign: 'center',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2\n        },\n        children: \"Loading diagnosis results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        textAlign: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: [\"Diagnosis Results for Submission ID: \", submissionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: results.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: result.organ_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 28\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  gutterBottom: true,\n                  children: result.diagnosis_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: result.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, result.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => navigate(`/treatment-plan/${submissionId}`),\n          sx: {\n            mt: 3\n          },\n          children: \"View Treatment Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DiagnosisResults, \"DDcjnwnGucAHBbdQDIy4a89Eg78=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DiagnosisResults;\nexport default DiagnosisResults;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisResults\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","fetchDiagnosisResults","NavBar","Button","Container","Typography","CircularProgress","List","ListItem","ListItemText","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","DiagnosisResults","_s","submissionId","results","setResults","loading","setLoading","error","setError","navigate","isNaN","Number","console","loadResults","log","data","length","err","maxWidth","sx","textAlign","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","elevation","p","gutterBottom","map","result","mb","primary","organ_name","secondary","diagnosis_name","description","id","onClick","_c","$RefreshReg$"],"sources":["/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/DiagnosisResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchDiagnosisResults } from '../utils/api';\nimport NavBar from './NavBar';\nimport {\n  Button,\n  Container,\n  Typography,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from '@mui/material';\n\nfunction DiagnosisResults() {\n  const { submissionId } = useParams(); // Use submissionId dynamically from the route\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    if (!submissionId || isNaN(Number(submissionId))) {\n      console.error('Invalid or missing submissionId:', submissionId);\n      setError('Invalid submission ID. Please try again.');\n      setLoading(false);\n      return;\n    }\n\n    async function loadResults() {\n      try {\n        console.log(`Fetching diagnosis results for submissionId: ${submissionId}`);\n        const data = await fetchDiagnosisResults(Number(submissionId));\n        console.log('Fetched diagnosis results:', data);\n\n        if (data.length === 0) {\n          setError('No diagnosis results found for the specified submission.');\n        } else {\n          setResults(data);\n        }\n      } catch (err) {\n        console.error('Error fetching diagnosis results:', err);\n        setError('Failed to load diagnosis results. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadResults();\n  }, [submissionId]);\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"sm\" sx={{ textAlign: 'center', mt: 4 }}>\n        <CircularProgress />\n        <Typography variant=\"body1\" sx={{ mt: 2 }}>\n          Loading diagnosis results...\n        </Typography>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container maxWidth=\"sm\" sx={{ textAlign: 'center', mt: 4 }}>\n        <Typography variant=\"body1\" color=\"error\">\n          {error}\n        </Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <NavBar />\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n        <Paper elevation={3} sx={{ p: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Diagnosis Results for Submission ID: {submissionId}\n          </Typography>\n          <List>\n            {results.map((result) => (\n              <ListItem key={result.id} sx={{ mb: 2 }}>\n                <ListItemText\n                  primary={<Typography variant=\"h6\">{result.organ_name}</Typography>}\n                  secondary={\n                    <>\n                      <Typography variant=\"body1\" gutterBottom>\n                        {result.diagnosis_name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {result.description}\n                      </Typography>\n                    </>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => navigate(`/treatment-plan/${submissionId}`)}\n            sx={{ mt: 3 }}\n          >\n            View Treatment Plan\n          </Button>\n        </Paper>\n      </Container>\n    </>\n  );\n}\n\nexport default DiagnosisResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}