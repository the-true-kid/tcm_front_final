{"ast":null,"code":"var _jsxFileName = \"/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { fetchQuestions, submitAnswers } from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport { Button, Container, Typography, Paper, Box, Checkbox, FormControlLabel, CircularProgress, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Survey() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function loadQuestions() {\n      try {\n        console.log('Fetching questions...');\n        const data = await fetchQuestions();\n        if (!data || data.length === 0) {\n          setError('No questions available at the moment.');\n          return;\n        }\n        console.log('Fetched questions:', data);\n        setQuestions(data);\n        setResponses(Array(data.length).fill(false));\n      } catch (err) {\n        setError('Failed to load questions. Please try again later.');\n        console.error('Error fetching questions:', err.message || err);\n      }\n    }\n    loadQuestions();\n  }, []);\n  const handleResponseChange = (index, value) => {\n    console.log(`Changing response for question at index ${index} to ${value}`);\n    const updatedResponses = [...responses];\n    updatedResponses[index] = value;\n    setResponses(updatedResponses);\n    console.log('Updated responses state:', updatedResponses);\n  };\n  const handleSubmit = async () => {\n    try {\n      if (!(user !== null && user !== void 0 && user.id)) {\n        setError('User not authenticated. Please log in.');\n        return;\n      }\n      console.log('Preparing answers for submission...');\n      const answers = questions.map((q, index) => ({\n        bitPosition: q.bit_position,\n        isTrue: responses[index]\n      }));\n      console.log('Prepared answers:', answers);\n      const submissionId = await submitAnswers(user.id, answers);\n      console.log('Submission successful, Submission ID:', submissionId);\n      if (!submissionId || typeof submissionId !== 'number') {\n        console.error('Invalid submissionId received from backend:', submissionId);\n        throw new Error('Invalid submissionId received');\n      }\n      localStorage.setItem('lastSubmissionId', submissionId);\n      navigate(`/treatment-plan/${submissionId}`);\n    } catch (err) {\n      setError('Failed to submit survey. Please try again later.');\n      console.error('Error submitting survey:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"New Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), (questions === null || questions === void 0 ? void 0 : questions.length) === 0 && !error && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 31\n          }, this) : 'No questions available at the moment.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        children: questions === null || questions === void 0 ? void 0 : questions.map((q, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: responses[index],\n            onChange: e => handleResponseChange(index, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this),\n          label: q.question_text,\n          sx: {\n            display: 'block',\n            mb: 2\n          }\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"cVOCXVJ57lX+wXCLB2wvPjflCfs=\", false, function () {\n  return [useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","useContext","fetchQuestions","submitAnswers","useNavigate","UserContext","Button","Container","Typography","Paper","Box","Checkbox","FormControlLabel","CircularProgress","Alert","jsxDEV","_jsxDEV","Survey","_s","questions","setQuestions","responses","setResponses","error","setError","isSubmitting","setIsSubmitting","navigate","user","loadQuestions","console","log","data","length","Array","fill","err","message","handleResponseChange","index","value","updatedResponses","handleSubmit","id","answers","map","q","bitPosition","bit_position","isTrue","submissionId","Error","localStorage","setItem","maxWidth","sx","mt","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","textAlign","component","noValidate","autoComplete","control","checked","onChange","e","target","label","question_text","display","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/Survey.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { fetchQuestions, submitAnswers } from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport {\n  Button,\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\n\nfunction Survey() {\n  const [questions, setQuestions] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    async function loadQuestions() {\n      try {\n        console.log('Fetching questions...');\n        const data = await fetchQuestions();\n        if (!data || data.length === 0) {\n          setError('No questions available at the moment.');\n          return;\n        }\n        console.log('Fetched questions:', data);\n        setQuestions(data);\n        setResponses(Array(data.length).fill(false));\n      } catch (err) {\n        setError('Failed to load questions. Please try again later.');\n        console.error('Error fetching questions:', err.message || err);\n      }\n    }\n    loadQuestions();\n  }, []);\n\n  const handleResponseChange = (index, value) => {\n    console.log(`Changing response for question at index ${index} to ${value}`);\n    const updatedResponses = [...responses];\n    updatedResponses[index] = value;\n    setResponses(updatedResponses);\n    console.log('Updated responses state:', updatedResponses);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!user?.id) {\n        setError('User not authenticated. Please log in.');\n        return;\n      }\n\n      console.log('Preparing answers for submission...');\n      const answers = questions.map((q, index) => ({\n        bitPosition: q.bit_position,\n        isTrue: responses[index],\n      }));\n      console.log('Prepared answers:', answers);\n\n      const submissionId = await submitAnswers(user.id, answers);\n      console.log('Submission successful, Submission ID:', submissionId);\n\n      if (!submissionId || typeof submissionId !== 'number') {\n        console.error('Invalid submissionId received from backend:', submissionId);\n        throw new Error('Invalid submissionId received');\n      }\n\n      localStorage.setItem('lastSubmissionId', submissionId);\n      navigate(`/treatment-plan/${submissionId}`);\n    } catch (err) {\n      setError('Failed to submit survey. Please try again later.');\n      console.error('Error submitting survey:', err);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Paper elevation={3} sx={{ p: 4 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          New Survey\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {questions?.length === 0 && !error && (\n          <Box textAlign=\"center\">\n            <Typography variant=\"body1\" gutterBottom>\n              {isSubmitting ? <CircularProgress /> : 'No questions available at the moment.'}\n            </Typography>\n          </Box>\n        )}\n\n        <Box component=\"form\" noValidate autoComplete=\"off\">\n          {questions?.map((q, index) => (\n            <FormControlLabel\n              key={q.id}\n              control={\n                <Checkbox\n                  checked={responses[index]}\n                  onChange={(e) => handleResponseChange(index, e.target.checked)}\n                />\n              }\n              label={q.question_text}\n              sx={{ display: 'block', mb: 2 }}\n            />\n          ))}\n        </Box>\n\n        <Box textAlign=\"center\" mt={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Submitting...' : 'Submit'}\n          </Button>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Survey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}