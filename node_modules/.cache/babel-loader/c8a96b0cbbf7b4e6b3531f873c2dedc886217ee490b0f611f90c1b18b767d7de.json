{"ast":null,"code":"var _jsxFileName = \"/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/TreatmentPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchTreatmentPlan } from '../utils/api';\nimport UserContext from '../context/UserContext'; // Import UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreatmentPlan() {\n  _s();\n  const {\n    submissionId\n  } = useParams(); // Fetch submissionId from URL params\n  const [treatmentPlan, setTreatmentPlan] = useState(null);\n  const [error, setError] = useState('');\n  const {\n    user\n  } = useContext(UserContext); // Access user context\n  const navigate = useNavigate(); // For redirecting unauthenticated users\n\n  useEffect(() => {\n    if (!user) {\n      console.error('User not authenticated. Redirecting to login.');\n      navigate('/login');\n      return;\n    }\n    async function loadTreatmentPlan() {\n      try {\n        console.log(`Fetching treatment plan for submissionId: ${submissionId}`);\n        const data = await fetchTreatmentPlan(submissionId);\n        console.log('Fetched treatment plan:', data);\n        setTreatmentPlan(data);\n      } catch (err) {\n        setError('Failed to load treatment plan. Please try again.');\n        console.error('Error fetching treatment plan:', err);\n      }\n    }\n    loadTreatmentPlan();\n  }, [submissionId, user, navigate]);\n  if (!user) {\n    return null; // Optional: Add a loader or redirect message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (!treatmentPlan) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading treatment plan...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"treatment-plan\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Treatment Plan for Submission ID: \", submissionId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), treatmentPlan.map(organ => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"treatment-plan-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: organ.organ_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Food Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), organ.foods.length > 0 ? organ.foods.map((food, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: food.food_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this), \": \", food.properties]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No food recommendations available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Herbal Remedies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), organ.herbs.length > 0 ? organ.herbs.map((herb, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: herb.herb_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), \": \", herb.properties]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No herbal remedies available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Lifestyle & Emotions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), organ.emotions.length > 0 ? organ.emotions.map((emotion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: emotion.emotion_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this), \": \", emotion.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No emotional or lifestyle recommendations available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, organ.organ_name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(TreatmentPlan, \"6aSIzhk3F5sfkg63t5WCP5ZypIY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TreatmentPlan;\nexport default TreatmentPlan;\nvar _c;\n$RefreshReg$(_c, \"TreatmentPlan\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useNavigate","fetchTreatmentPlan","UserContext","jsxDEV","_jsxDEV","TreatmentPlan","_s","submissionId","treatmentPlan","setTreatmentPlan","error","setError","user","navigate","console","loadTreatmentPlan","log","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","organ","organ_name","foods","length","food","index","food_name","properties","herbs","herb","herb_name","emotions","emotion","emotion_name","description","_c","$RefreshReg$"],"sources":["/Users/aaronweiss/Desktop/tcm app build 2/tcm-app/src/components/TreatmentPlan.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchTreatmentPlan } from '../utils/api';\nimport UserContext from '../context/UserContext'; // Import UserContext\n\nfunction TreatmentPlan() {\n  const { submissionId } = useParams(); // Fetch submissionId from URL params\n  const [treatmentPlan, setTreatmentPlan] = useState(null);\n  const [error, setError] = useState('');\n  const { user } = useContext(UserContext); // Access user context\n  const navigate = useNavigate(); // For redirecting unauthenticated users\n\n  useEffect(() => {\n    if (!user) {\n      console.error('User not authenticated. Redirecting to login.');\n      navigate('/login');\n      return;\n    }\n\n    async function loadTreatmentPlan() {\n      try {\n        console.log(`Fetching treatment plan for submissionId: ${submissionId}`);\n        const data = await fetchTreatmentPlan(submissionId);\n        console.log('Fetched treatment plan:', data);\n        setTreatmentPlan(data);\n      } catch (err) {\n        setError('Failed to load treatment plan. Please try again.');\n        console.error('Error fetching treatment plan:', err);\n      }\n    }\n\n    loadTreatmentPlan();\n  }, [submissionId, user, navigate]);\n\n  if (!user) {\n    return null; // Optional: Add a loader or redirect message\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  if (!treatmentPlan) {\n    return <p>Loading treatment plan...</p>;\n  }\n\n  return (\n    <div className=\"treatment-plan\">\n      <h2>Treatment Plan for Submission ID: {submissionId}</h2>\n\n      {treatmentPlan.map((organ) => (\n        <div key={organ.organ_name} className=\"treatment-plan-card\">\n          <h3>{organ.organ_name}</h3>\n\n          {/* Food Section */}\n          <div className=\"section\">\n            <h4>Food Recommendations</h4>\n            {organ.foods.length > 0 ? (\n              organ.foods.map((food, index) => (\n                <div key={index} className=\"item\">\n                  <strong>{food.food_name}</strong>: {food.properties}\n                </div>\n              ))\n            ) : (\n              <p>No food recommendations available.</p>\n            )}\n          </div>\n\n          {/* Herbs Section */}\n          <div className=\"section\">\n            <h4>Herbal Remedies</h4>\n            {organ.herbs.length > 0 ? (\n              organ.herbs.map((herb, index) => (\n                <div key={index} className=\"item\">\n                  <strong>{herb.herb_name}</strong>: {herb.properties}\n                </div>\n              ))\n            ) : (\n              <p>No herbal remedies available.</p>\n            )}\n          </div>\n\n          {/* Emotions Section */}\n          <div className=\"section\">\n            <h4>Lifestyle & Emotions</h4>\n            {organ.emotions.length > 0 ? (\n              organ.emotions.map((emotion, index) => (\n                <div key={index} className=\"item\">\n                  <strong>{emotion.emotion_name}</strong>: {emotion.description}\n                </div>\n              ))\n            ) : (\n              <p>No emotional or lifestyle recommendations available.</p>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TreatmentPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}